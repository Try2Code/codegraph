h2. Codegraph

'codegraph' is an analysis tool for PHP-, PERL, Bash, C and Fortran-libraries.  It scans files from a list and extracts the the functions therein. Then it extracts the body of each function and tries to find any other of the functions found before. If successfull, it genereates an edge from the function which calls the other function (calling function ----> called function). If no function is found, it generates a single knode.  'codegraph' needs the directory @$HOME/.codegraph@ for some files. You can generate is manually or 'codegraph' will do this for you, when it's started the first time.  

homepage: http://codegraph.rubyforge.org

h2. documentation

For technical issues I recommend to use 'rdoc -a'. Otherwise use the man page or just  type <pre>codegraph --help</pre>

h2. installation

<pre>gem install codegraph</pre> or
<pre>gem install codegraph --user-install</pre> for non-system-wide installation

h2. development

I take codegraph as a moving target. I uses it for PHP in the beginning, but ctags knows a lot languages. So I took over Bash and Perl, too. Now is mainly used for C and Fortran. That's why I added these two to codegraph. Preprocessing is a little bit tricky, but at least for C, it works (hopefully).  If you have any kind of feature wishes, please let me know.

h2. changelog

|0.7.21|use propper method for encoding|
|      |improved C scanning|
|0.7.20|new options for clustering by filenames (-c), graph rotation (-r) and box representation (-b) instead of ovals|
|0.7.19|Changed from RGL to graph library|
|      |skipped -8 option, this will be reimplemented later|
|      |general speed up through threadding and caching of results|

h2. thanks

* Horst Duchene, developer of the Ruby Graph Library
* Ryan Davis for providing graph
* Of cource: the ruby communitiy, esp. the mailing-list users
* YOU, using codegraph

h2. contact

stark.dreamdetective@gmail.com or via github
